  1   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2   0              ;                 
  3   0              ; Simon Says Game
  4   0              ; Shows a sequence that player must repeat
  5   0              ; 115200bps, 8 data bits, no parity, 1 stop bit, no flow control
  6   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  7   0              
  8   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  9   0              ; Constants and variables declaration
 10   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                  
 11   0              :CONSTANT   RS232        FF           ; UART port
 12   0              
 13   0              :NAMEREG    S0           TEMP         ; Temporary register
 14   0              :NAMEREG    S1           TXREG        ; Transmission buffer
 15   0              :NAMEREG    S2           RXREG        ; Reception buffer
 16   0              :NAMEREG    S3           CONTBIT      ; Bit counter
 17   0              :NAMEREG    S4           CONT1        ; Delay counter 1
 18   0              :NAMEREG    S5           CONT2        ; Delay counter 2
 19   0              :NAMEREG    S6           SEQUENCE     ; Current position in sequence
 20   0              :NAMEREG    S7           PATTERN      ; Pattern to show/level
 21   0              
 22   0              :ADDRESS    00           ; Program starts at address 00
 23   0              
 24   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 25   0              ; Program start
 26   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 27   0              :DISABLE    INTERRUPT    
 28   1              
 29   1 START        :LOAD       PATTERN      41           ; Start with 'A'
 30   2              :LOAD       SEQUENCE     01           ; Start with sequence length 1
 31   3              
 32   3 SHOW_SEQ     :LOAD       TEMP         SEQUENCE     ; Initialize sequence counter
 33   4              
 34   4 NEXT_CHAR    :LOAD       TXREG        PATTERN      ; Show current pattern
 35   5              :CALL       TRANSMITE    
 36   6              :LOAD       TXREG        20           ; Space
 37   7              :CALL       TRANSMITE    
 38   8              
 39   8              ; Delay between characters
 40   8              :LOAD       CONT1        FF           
 41   9 WAIT1        :LOAD       CONT2        FF           
 42   A WAIT2        :SUB        CONT2        01           
 43   B              :JUMP       NZ           WAIT2        
 44   C              :SUB        CONT1        01           
 45   D              :JUMP       NZ           WAIT1        
 46   E              
 47   E              :SUB        TEMP         01           
 48   F              :JUMP       NZ           NEXT_CHAR    
 49  10              
 50  10              ; End sequence with newline
 51  10              :LOAD       TXREG        0D           ; CR
 52  11              :CALL       TRANSMITE    
 53  12              :LOAD       TXREG        0A           ; LF
 54  13              :CALL       TRANSMITE    
 55  14              
 56  14              :LOAD       TEMP         SEQUENCE     ; Reset for input phase
 57  15              :ENABLE     INTERRUPT    ; Wait for player input
 58  16              
 59  16 MAIN_LOOP    :LOAD       CONT1        FF           ; Main program delay loop
 60  17 LOOP1        :LOAD       CONT2        FF           
 61  18 LOOP2        :SUB        CONT2        01           
 62  19              :JUMP       NZ           LOOP2        
 63  1A              :SUB        CONT1        01           
 64  1B              :JUMP       NZ           LOOP1        
 65  1C              :JUMP       MAIN_LOOP    
 66  1D              
 67  1D              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 68  1D              ; Character reception routine
 69  1D              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 70  1D RECIBE       :INPUT      RXREG        RS232        
 71  1E              :AND        RXREG        80           
 72  1F              :JUMP       NZ           RECIBE       
 73  20              :CALL       WAIT_05BIT   
 74  21              :LOAD       CONTBIT      09           
 75  22 NEXT_RX_BIT  
 76  22              :CALL       WAIT_1BIT    
 77  23              :SR0        RXREG        
 78  24              :INPUT      TEMP         RS232        
 79  25              :AND        TEMP         80           
 80  26              :OR         RXREG        TEMP         
 81  27              :SUB        CONTBIT      01           
 82  28              :JUMP       NZ           NEXT_RX_BIT  
 83  29              :RETURN     
 84  2A              
 85  2A              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 86  2A              ; Character transmission routine
 87  2A              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 88  2A TRANSMITE    :LOAD       TEMP         00           
 89  2B              :OUTPUT     TEMP         RS232        
 90  2C              :CALL       WAIT_1BIT    
 91  2D              :LOAD       CONTBIT      08           
 92  2E NEXT_TX_BIT  
 93  2E              :OUTPUT     TXREG        RS232        
 94  2F              :CALL       WAIT_1BIT    
 95  30              :SR0        TXREG        
 96  31              :SUB        CONTBIT      01           
 97  32              :JUMP       NZ           NEXT_TX_BIT  
 98  33              :LOAD       TEMP         FF           
 99  34              :OUTPUT     TEMP         RS232        
100  35              :CALL       WAIT_1BIT    
101  36              :RETURN     
102  37              
103  37              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
104  37              ; Timing routines
105  37              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
106  37 WAIT_1BIT    :LOAD       CONT1        03           
107  38 ESPERA2      :LOAD       CONT2        22           
108  39 ESPERA1      :SUB        CONT2        01           
109  3A              :JUMP       NZ           ESPERA1      
110  3B              :SUB        CONT1        01           
111  3C              :JUMP       NZ           ESPERA2      
112  3D              :RETURN     
113  3E              
114  3E WAIT_05BIT   :LOAD       CONT1        03           
115  3F ESPERA4      :LOAD       CONT2        10           
116  40 ESPERA3      :SUB        CONT2        01           
117  41              :JUMP       NZ           ESPERA3      
118  42              :SUB        CONT1        01           
119  43              :JUMP       NZ           ESPERA4      
120  44              :RETURN     
121  45              
122  45              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
123  45              ; Interrupt Service Routine
124  45              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
125  FF              :ADDRESS    FF           
126  FF ISR          :DISABLE    INTERRUPT    
127 100              :CALL       RECIBE       ; Get character
128 101              
129 101              ; Echo received character
130 101              :LOAD       TXREG        RXREG        
131 102              :CALL       TRANSMITE    
132 103              
133 103              ; Check if input matches pattern
134 103              :LOAD       TEMP         RXREG        
135 104              :SUB        TEMP         PATTERN      
136 105              :JUMP       NZ           GAME_OVER    
137 106              
138 106              :SUB        SEQUENCE     01           ; One character matched
139 107              :JUMP       Z            LEVEL_COMPLETE ; If sequence complete
140 108              :RETURNI    ENABLE       ; Otherwise continue sequence
141 109              
142 109 GAME_OVER    :LOAD       TXREG        58           ; ':('
143 10A              :CALL       TRANSMITE    
144 10B              :LOAD       TXREG        40           
145 10C              :CALL       TRANSMITE    
146 10D              :LOAD       TXREG        0D           
147 10E              :CALL       TRANSMITE    
148 10F              :LOAD       TXREG        0A           
149 110              :CALL       TRANSMITE    
150 111              :JUMP       START        ; Restart game
151 112              
152 112 LEVEL_COMPLETE 
153 112              :LOAD       TXREG        3A           ; ':)'
154 113              :CALL       TRANSMITE    
155 114              :LOAD       TXREG        29           
156 115              :CALL       TRANSMITE    
157 116              :LOAD       TXREG        0D           
158 117              :CALL       TRANSMITE    
159 118              :LOAD       TXREG        0A           
160 119              :CALL       TRANSMITE    
161 11A              
162 11A              :ADD        SEQUENCE     01           ; Increase sequence length
163 11B              :ADD        PATTERN      01           ; Change pattern
164 11C              :JUMP       SHOW_SEQ     ; Show new sequence
