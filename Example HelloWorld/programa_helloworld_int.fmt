  1   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2   0              ;                 
  3   0              ; Higher/Lower Guessing Game
  4   0              ; 115200bps, 8 data bits, no parity, 1 stop bit, no flow control
  5   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  6   0              
  7   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  8   0              ; Constants and variables declaration
  9   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                  
 10   0              :CONSTANT   RS232        FF           ; UART port
 11   0              
 12   0              :NAMEREG    S0           TEMP         ; Temporary register
 13   0              :NAMEREG    S1           TXREG        ; Transmission buffer
 14   0              :NAMEREG    S2           RXREG        ; Reception buffer
 15   0              :NAMEREG    S3           CONTBIT      ; Bit counter
 16   0              :NAMEREG    S4           CONT1        ; Delay counter 1
 17   0              :NAMEREG    S5           CONT2        ; Delay counter 2
 18   0              :NAMEREG    S6           CURRENT      ; Current number
 19   0              :NAMEREG    S7           NEXT         ; Next number
 20   0              
 21   0              :ADDRESS    00           ; Program starts at address 00
 22   0              
 23   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 24   0              ; Program start
 25   0              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 26   0              :DISABLE    INTERRUPT    
 27   1              
 28   1 START        :LOAD       CURRENT      01           ; Initial number
 29   2              
 30   2 NEW_ROUND    
 31   2              ; Send current number
 32   2              :LOAD       TXREG        CURRENT      
 33   3              :ADD        TXREG        30           ; Convert to ASCII
 34   4              :CALL       TRANSMITE    
 35   5              :LOAD       TXREG        0D           ; CR
 36   6              :CALL       TRANSMITE    
 37   7              :LOAD       TXREG        0A           ; LF
 38   8              :CALL       TRANSMITE    
 39   9              
 40   9              ; Generate next number
 41   9              :LOAD       TEMP         CURRENT      
 42   A              :ADD        TEMP         43           ; Some "random" operation
 43   B              :AND        TEMP         07           ; Keep it within 0-7
 44   C              :ADD        TEMP         01           ; Make it 1-8
 45   D              :LOAD       NEXT         TEMP         
 46   E              
 47   E              :ENABLE     INTERRUPT    ; Wait for player input
 48   F              
 49   F              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 50   F              ; Main program loop
 51   F              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 52   F MAIN_LOOP    
 53   F              :LOAD       CONT1        FF           ; Some delay
 54  10 LOOP1        :LOAD       CONT2        FF           
 55  11 LOOP2        :SUB        CONT2        01           
 56  12              :JUMP       NZ           LOOP2        
 57  13              :SUB        CONT1        01           
 58  14              :JUMP       NZ           LOOP1        
 59  15              :JUMP       MAIN_LOOP    ; Loop forever
 60  16              
 61  16              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 62  16              ; Character reception routine
 63  16              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 64  16 RECIBE       :INPUT      RXREG        RS232        
 65  17              :AND        RXREG        80           
 66  18              :JUMP       NZ           RECIBE       
 67  19              :CALL       WAIT_05BIT   
 68  1A              :LOAD       CONTBIT      09           
 69  1B NEXT_RX_BIT  
 70  1B              :CALL       WAIT_1BIT    
 71  1C              :SR0        RXREG        
 72  1D              :INPUT      TEMP         RS232        
 73  1E              :AND        TEMP         80           
 74  1F              :OR         RXREG        TEMP         
 75  20              :SUB        CONTBIT      01           
 76  21              :JUMP       NZ           NEXT_RX_BIT  
 77  22              :RETURN     
 78  23              
 79  23              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 80  23              ; Character transmission routine
 81  23              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 82  23 TRANSMITE    
 83  23              :LOAD       TEMP         00           
 84  24              :OUTPUT     TEMP         RS232        
 85  25              :CALL       WAIT_1BIT    
 86  26              :LOAD       CONTBIT      08           
 87  27 NEXT_TX_BIT  
 88  27              :OUTPUT     TXREG        RS232        
 89  28              :CALL       WAIT_1BIT    
 90  29              :SR0        TXREG        
 91  2A              :SUB        CONTBIT      01           
 92  2B              :JUMP       NZ           NEXT_TX_BIT  
 93  2C              :LOAD       TEMP         FF           
 94  2D              :OUTPUT     TEMP         RS232        
 95  2E              :CALL       WAIT_1BIT    
 96  2F              :RETURN     
 97  30              
 98  30              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 99  30              ; Timing routines
100  30              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
101  30 WAIT_1BIT    
102  30              :LOAD       CONT1        03           
103  31 ESPERA2      
104  31              :LOAD       CONT2        22           
105  32 ESPERA1      
106  32              :SUB        CONT2        01           
107  33              :JUMP       NZ           ESPERA1      
108  34              :SUB        CONT1        01           
109  35              :JUMP       NZ           ESPERA2      
110  36              :RETURN     
111  37              
112  37 WAIT_05BIT   
113  37              :LOAD       CONT1        03           
114  38 ESPERA4      
115  38              :LOAD       CONT2        10           
116  39 ESPERA3      
117  39              :SUB        CONT2        01           
118  3A              :JUMP       NZ           ESPERA3      
119  3B              :SUB        CONT1        01           
120  3C              :JUMP       NZ           ESPERA4      
121  3D              :RETURN     
122  3E              
123  3E              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
124  3E              ; Interrupt Service Routine
125  3E              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
126  FF              :ADDRESS    FF           
127  FF ISR          :DISABLE    INTERRUPT    
128 100              :CALL       RECIBE       ; Get player's guess
129 101              
130 101              ; Echo received character
131 101              :LOAD       TXREG        RXREG        
132 102              :CALL       TRANSMITE    
133 103              
134 103              ; Check if guess is correct
135 103              :LOAD       TEMP         RXREG        
136 104              :SUB        TEMP         48           ; Convert from ASCII '0'
137 105              
138 105              :LOAD       S0           CURRENT      
139 106              :SUB        S0           NEXT         
140 107              :JUMP       Z            TIE          
141 108              
142 108              :JUMP       NC           HIGH_GUESS   
143 109              ; Low guess
144 109              :SUB        TEMP         02           ; Check if guess was '2' (lower)
145 10A              :JUMP       NZ           WRONG        
146 10B              :JUMP       WIN          
147 10C              
148 10C HIGH_GUESS   
149 10C              ; High guess
150 10C              :SUB        TEMP         01           ; Check if guess was '1' (higher)
151 10D              :JUMP       NZ           WRONG        
152 10E              :JUMP       WIN          
153 10F              
154 10F WRONG        :LOAD       TXREG        45           ; 'X'
155 110              :CALL       TRANSMITE    
156 111              :JUMP       END_ISR      
157 112              
158 112 WIN          :LOAD       TXREG        43           ; 'O'
159 113              :CALL       TRANSMITE    
160 114              :JUMP       END_ISR      
161 115              
162 115 TIE          :LOAD       TXREG        3D           ; '='
163 116              :CALL       TRANSMITE    
164 117              :JUMP       END_ISR      
165 118              
166 118 END_ISR      
167 118              :LOAD       TXREG        0D           ; CR
168 119              :CALL       TRANSMITE    
169 11A              :LOAD       TXREG        0A           ; LF
170 11B              :CALL       TRANSMITE    
171 11C              :LOAD       CURRENT      NEXT         ; Update current number
172 11D              :JUMP       NEW_ROUND    
